// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Company {
  company_id     Int       @id @default(autoincrement())
  company_name   String
  company_rut    String    @unique
  is_active      Boolean   @default(true)
  address_street String?
  address_city   String?
  address_state  String?
  address_zip    String?
  users          User[]
  stores         Store[]
}

model User {
  user_id   Int     @id @default(autoincrement())
  name      String
  email     String  @unique
  password  String
  rut       String? @unique
  role      String
  is_active Boolean @default(true)
  company   Company @relation(fields: [company_id], references: [company_id])
  company_id Int
  sales     Sale[]
}

model Store {
  store_id       Int       @id @default(autoincrement())
  store_name     String
  coord_latitude Float?
  coord_longitude Float?
  address_street String?
  address_city   String?
  address_state  String?
  address_zip    String?
  is_active      Boolean   @default(true)
  company        Company   @relation(fields: [company_id], references: [company_id])
  company_id     Int
  sales          Sale[]
  storeProducts  StoreProduct[]
}

model Category {
  category_id   Int       @id @default(autoincrement())
  category_name String    @unique
  products      Product[]
}

model Color {
  color_id   Int       @id @default(autoincrement())
  color_name String    @unique
  color_code String    @unique
  products   Product[]
}

model Product {
  product_id  Int           @id @default(autoincrement())
  product_name String
  description String?
  is_active   Boolean       @default(true)
  category    Category      @relation(fields: [category_id], references: [category_id])
  category_id Int
  color       Color         @relation(fields: [color_id], references: [color_id])
  color_id    Int
  saleItems   SaleItem[]
  storeProducts StoreProduct[]
}

model StoreProduct {
  store_id   Int
  product_id Int
  quantity   Int    @default(0)

  store      Store  @relation(fields: [store_id], references: [store_id])
  product    Product @relation(fields: [product_id], references: [product_id])

  @@id([store_id, product_id])
}

model Sale {
  sale_id    Int      @id @default(autoincrement())
  sale_number String  @unique
  sale_date  DateTime @default(now())
  sale_total Float
  user       User     @relation(fields: [user_id], references: [user_id])
  user_id    Int
  store      Store    @relation(fields: [store_id], references: [store_id])
  store_id   Int
  saleItems  SaleItem[]
}

model SaleItem {
  sale_id   Int
  product_id Int
  quantity  Int
  price     Float

  sale      Sale    @relation(fields: [sale_id], references: [sale_id])
  product   Product @relation(fields: [product_id], references: [product_id])

  @@id([sale_id, product_id])
}
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           Int      @id @default(autoincrement())
  name         String
  rut          String   @unique
  is_active    Boolean  @default(true)
  address_street String?
  address_city   String?
  address_state  String?
  postal_code    Int?

  users   User[]
  stores  Store[]
}

model User {
  id        Int     @id @default(autoincrement())
  name      String
  email     String  @unique
  password  String
  rut       String? @unique
  role      String
  is_active Boolean @default(true)

  company   Company @relation(fields: [company_id], references: [id])
  company_id Int

  sales     Sale[]
}

model Store {
  id            Int      @id @default(autoincrement())
  name          String
  coord_latitude  Float?
  coord_longitude Float?
  address_street  String?
  address_city    String?
  address_state   String?
  postal_code     Int?
  is_active      Boolean  @default(true)

  company   Company @relation(fields: [company_id], references: [id])
  company_id Int

  sales          Sale[]
  storeProducts  StoreProduct[]
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique

  products Product[]
}

model Color {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  code  String  @unique

  products Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Int      
  is_active   Boolean    @default(true)

  category   Category @relation(fields: [category_id], references: [id])
  category_id Int

  color      Color    @relation(fields: [color_id], references: [id])
  color_id    Int

  saleItems      SaleItem[]
  storeProducts  StoreProduct[]
  images         Image[]  
}

model Image {
  id        Int    @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [product_id], references: [id])
  product_id Int
}

model StoreProduct {
  store_id   Int
  product_id Int
  quantity  Int    @default(0)

  store     Store   @relation(fields: [store_id], references: [id])
  product   Product @relation(fields: [product_id], references: [id])

  @@id([store_id, product_id])
}

model Sale {
  id        Int      @id @default(autoincrement())
  number    String   @unique
  date      DateTime @default(now())
  total     Float

  user      User  @relation(fields: [user_id], references: [id])
  user_id    Int

  store     Store @relation(fields: [store_id], references: [id])
  store_id   Int

  saleItems SaleItem[]
}

model SaleItem {
  sale_id    Int
  product_id Int
  quantity  Int
  price     Int

  sale      Sale    @relation(fields: [sale_id], references: [id])
  product   Product @relation(fields: [product_id], references: [id])

  @@id([sale_id, product_id])
}
